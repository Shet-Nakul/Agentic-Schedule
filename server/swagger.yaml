openapi: 3.0.0
info:
  title: Agentic Schedule API
  version: 1.0.0
  description: API documentation for Contracts, Staff, Skills, DayOffRequests, and ShiftOffRequests

paths:
  /contracts:
    post:
      summary: Create one or multiple contracts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Contract'
                - type: array
                  items:
                    $ref: '#/components/schemas/Contract'
            examples:
              SingleContract:
                summary: Single contract object
                value:
                  ContractID: 1
                  Description: "Sample contract"
                  SingleAssignmentPerDay: true
                  MaxNumAssignments: 5
                  MinNumAssignments: 1
                  MaxConsecutiveWorkingDays: 6
                  MinConsecutiveWorkingDays: 2
                  MaxConsecutiveFreeDays: 3
                  MinConsecutiveFreeDays: 1
                  MaxConsecutiveWorkingWeekends: 2
                  MinConsecutiveWorkingWeekends: 1
                  MaxWorkingWeekendsInFourWeeks: 3
                  WeekendDefinition: "Sat-Sun"
                  CompleteWeekends: true
                  IdenticalShiftTypesDuringWeekend: false
                  NoNightShiftBeforeFreeWeekend: false
                  AlternativeSkillCategory: false
                  UnwantedPatterns: ""
              MultipleContracts:
                summary: List of contract objects
                value:
                  - ContractID: 2
                    Description: "Contract 2"
                    SingleAssignmentPerDay: false
                    MaxNumAssignments: 4
                    MinNumAssignments: 2
                    MaxConsecutiveWorkingDays: 5
                    MinConsecutiveWorkingDays: 2
                    MaxConsecutiveFreeDays: 2
                    MinConsecutiveFreeDays: 1
                    MaxConsecutiveWorkingWeekends: 1
                    MinConsecutiveWorkingWeekends: 1
                    MaxWorkingWeekendsInFourWeeks: 2
                    WeekendDefinition: "Sat-Sun"
                    CompleteWeekends: false
                    IdenticalShiftTypesDuringWeekend: false
                    NoNightShiftBeforeFreeWeekend: false
                    AlternativeSkillCategory: false
                    UnwantedPatterns: ""
                  - ContractID: 3
                    Description: "Contract 3"
                    SingleAssignmentPerDay: true
                    MaxNumAssignments: 6
                    MinNumAssignments: 3
                    MaxConsecutiveWorkingDays: 7
                    MinConsecutiveWorkingDays: 2
                    MaxConsecutiveFreeDays: 3
                    MinConsecutiveFreeDays: 1
                    MaxConsecutiveWorkingWeekends: 2
                    MinConsecutiveWorkingWeekends: 1
                    MaxWorkingWeekendsInFourWeeks: 4
                    WeekendDefinition: "Fri-Sat"
                    CompleteWeekends: true
                    IdenticalShiftTypesDuringWeekend: true
                    NoNightShiftBeforeFreeWeekend: true
                    AlternativeSkillCategory: true
                    UnwantedPatterns: ""
      responses:
        '201':
          description: Contracts created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 201
                  success_message:
                    type: string
                    example: Contracts created successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      contractIds:
                        type: array
                        items:
                          type: integer
                        example: [1, 2, 3]
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
    get:
      summary: Get all contracts
      responses:
        '200':
          description: List of contracts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardContractsListResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
    delete:
      summary: Delete contracts by list of ContractID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contractIds:
                  type: array
                  items:
                    type: integer
                  example: [1, 2, 3]
      responses:
        '200':
          description: Contracts deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: Contracts deleted successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      deletedCount:
                        type: integer
                        example: 3
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'


    get:
      summary: Get staff by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Staff member
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardStaffResponse'
        '404':
          description: Staff not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'

  /skills:
    post:
      summary: Create one or multiple skills
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Skill'
                - type: array
                  items:
                    $ref: '#/components/schemas/Skill'
            examples:
              SingleSkill:
                summary: Single skill object
                value:
                  skillName: "Nurse"
              MultipleSkills:
                summary: List of skill objects
                value:
                  - skillName: "Doctor"
                  - skillName: "Technician"
      responses:
        '201':
          description: Skills created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 201
                  success_message:
                    type: string
                    example: Skills created successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      skillIds:
                        type: array
                        items:
                          type: integer
                        example: [1, 2, 3]
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '409':
          description: Skill already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
    get:
      summary: Get all skills
      responses:
        '200':
          description: List of skills
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardSkillsListResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
    delete:
      summary: Delete skills by list of SkillID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                skillIds:
                  type: array
                  items:
                    type: integer
                  example: [1, 2, 3]
      responses:
        '200':
          description: Skills deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: Skills deleted successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      deletedCount:
                        type: integer
                        example: 2
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'

  /dayoffrequests:
    post:
      summary: Create one or multiple day off requests
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/DayOffRequest'
                - type: array
                  items:
                    $ref: '#/components/schemas/DayOffRequest'
      responses:
        '201':
          description: Day off requests created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 201
                  success_message:
                    type: string
                    example: Day off requests created successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      requestIds:
                        type: array
                        items:
                          type: integer
                        example: [1, 2, 3]
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
    get:
      summary: Get all day off requests
      responses:
        '200':
          description: List of day off requests
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: Day off requests fetched successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      dayOffRequests:
                        type: array
                        items:
                          $ref: '#/components/schemas/DayOffRequest'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
    delete:
      summary: Delete day off requests by list of RequestID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                requestIds:
                  type: array
                  items:
                    type: integer
                  example: [1, 2, 3]
      responses:
        '200':
          description: Day off requests deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: Day off requests deleted successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      deletedCount:
                        type: integer
                        example: 2
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'

  /shiftoffrequests:
    post:
      summary: Create one or multiple shift off requests
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/ShiftOffRequest'
                - type: array
                  items:
                    $ref: '#/components/schemas/ShiftOffRequest'
      responses:
        '201':
          description: Shift off requests created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 201
                  success_message:
                    type: string
                    example: Shift off requests created successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      requestIds:
                        type: array
                        items:
                          type: integer
                        example: [1, 2, 3]
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
    get:
      summary: Get all shift off requests
      responses:
        '200':
          description: List of shift off requests
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: Shift off requests fetched successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      shiftOffRequests:
                        type: array
                        items:
                          $ref: '#/components/schemas/ShiftOffRequest'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
    delete:
      summary: Delete shift off requests by list of RequestID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                requestIds:
                  type: array
                  items:
                    type: integer
                  example: [1, 2, 3]
      responses:
        '200':
          description: Shift off requests deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: Shift off requests deleted successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      deletedCount:
                        type: integer
                        example: 2
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'

  /requesttype:
    post:
      summary: Create one or multiple request types
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/RequestType'
                - type: array
                  items:
                    $ref: '#/components/schemas/RequestType'
            examples:
              SingleRequestType:
                summary: Single request type object
                value:
                  RequestTypeName: "Vacation"
                  RequestTypeDesc: "Vacation leave"
              MultipleRequestTypes:
                summary: List of request type objects
                value:
                  - RequestTypeName: "Sick"
                    RequestTypeDesc: "Sick leave"
                  - RequestTypeName: "Personal"
                    RequestTypeDesc: "Personal leave"
      responses:
        '201':
          description: Request types created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 201
                  success_message:
                    type: string
                    example: Request types created successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      requestTypeIds:
                        type: array
                        items:
                          type: integer
                        example: [1, 2]
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
    get:
      summary: Get all request types
      responses:
        '200':
          description: List of request types
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: Request types fetched successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      requestTypes:
                        type: array
                        items:
                          $ref: '#/components/schemas/RequestType'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
    delete:
      summary: Delete request types by list of RequestTypeID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                requestTypeIds:
                  type: array
                  items:
                    type: integer
                  example: [1, 2]
      responses:
        '200':
          description: Request types deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: Request types deleted successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      deletedCount:
                        type: integer
                        example: 2
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'

  /requesttype/{id}:
    get:
      summary: Get request type by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Request type
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: RequestType fetched successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      requestType:
                        $ref: '#/components/schemas/RequestType'
        '404':
          description: Request type not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'

  /startEvent:
    post:
      summary: Trigger a scheduling event (staff roster or operational schedule)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                eventName:
                  type: string
                  description: Name of the event to trigger
                  enum: [staff roster, operational schedule]
                horizon:
                  type: integer
                  description: Number of days/weeks for the scheduling horizon
                start_date:
                  type: string
                  format: date
                  description: Start date of the event horizon
                end_date:
                  type: string
                  format: date
                  description: End date of the event horizon
              required:
                - eventName
                - horizon
                - start_date
                - end_date
            examples:
              StaffRoster:
                summary: Staff roster event example
                value:
                  eventName: "staff roster"
                  horizon: 14
                  start_date: "2025-09-20"
                  end_date: "2025-10-03"
              OperationalSchedule:
                summary: Operational schedule event example
                value:
                  eventName: "operational schedule"
                  horizon: 7
                  start_date: "2025-09-20"
                  end_date: "2025-09-27"
      responses:
        '200':
          description: Event triggered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: Event 'staff roster' triggered successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      eventName:
                        type: string
                        example: staff roster
                      timestamp:
                        type: string
                        format: date-time
                        example: "2025-09-20T12:34:56.789Z"
                      eventDetails:
                        type: object
                        description: Details of the triggered event
                        properties:
                          eventType:
                            type: string
                            example: staff_roster
                          description:
                            type: string
                            example: Staff roster generation and management event
                          action:
                            type: string
                            example: generate_roster
                          dataFetched:
                            type: object
                            properties:
                              skillsData:
                                type: array
                                items:
                                  type: string
                                example: ["Skill A", "Skill B"]
                              shiftsData:
                                type: array
                                items:
                                  type: string
                                example: ["D", "L", "N"]
                              employees:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                    contract_id:
                                      type: string
                                    name:
                                      type: string
                                    skills:
                                      type: array
                                      items:
                                        type: string
                              contracts:
                                type: array
                                items:
                                  type: object
                              dayOffRequests:
                                type: array
                                items:
                                  type: object
                              shiftOffRequests:
                                type: array
                                items:
                                  type: object
                              requirements:
                                type: array
                                items:
                                  type: object
                          externalApiResponse:
                            type: object
                            description: Response returned by the external API
        '400':
          description: Bad request due to missing or invalid fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error while triggering the event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'

  /employeeSchedule:
    post:
      summary: Create one or multiple employee schedules
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/EmployeeScheduleCreate'
                - type: array
                  items:
                    $ref: '#/components/schemas/EmployeeScheduleCreate'
            examples:
              SingleSchedule:
                summary: Single schedule
                value:
                  date: "2025-09-21"
                  employee_id: 1
                  shift: "D"
                  working: true
              MultipleSchedules:
                summary: Multiple schedules
                value:
                  - date: "2025-09-21"
                    employee_id: 1
                    shift: "D"
                    working: true
                  - date: "2025-09-22"
                    employee_id: 2
                    shift: "L"
                    working: false
      responses:
        '201':
          description: Employee schedules created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeScheduleCreateResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'

    delete:
      summary: Delete employee schedules by list of ScheduleIDs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                scheduleIds:
                  type: array
                  items:
                    type: string
                  example: ["uuid1", "uuid2"]
      responses:
        '200':
          description: Employee schedules deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: Employee schedules deleted successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      deletedCount:
                        type: integer
                        example: 2
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'

    get:
      summary: Get all employee schedules
      responses:
        '200':
          description: List of employee schedules
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: Employee schedules fetched successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      schedules:
                        type: array
                        items:
                          $ref: '#/components/schemas/EmployeeScheduleResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'

  /employeeSchedule/{id}:
    get:
      summary: Get employee schedule by ScheduleID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Employee schedule details
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: Employee schedule fetched successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      schedule:
                        $ref: '#/components/schemas/EmployeeScheduleResponse'
        '404':
          description: Schedule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'

  /employeeSchedule/employee/{employeeId}:
    get:
      summary: Get schedules for a specific employee
      parameters:
        - in: path
          name: employeeId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Employee schedules
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: Employee schedules fetched successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      schedules:
                        type: array
                        items:
                          $ref: '#/components/schemas/EmployeeScheduleResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'

  /employeeSchedule/date/{date}:
    get:
      summary: Get schedules for a specific date
      parameters:
        - in: path
          name: date
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Employee schedules
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeScheduleListResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'

  /employeeSchedule/date-range/{startDate}/{endDate}:
    get:
      summary: Get schedules for a date range
      parameters:
        - in: path
          name: startDate
          required: true
          schema:
            type: string
            format: date
        - in: path
          name: endDate
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Employee schedules
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeScheduleListResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'

  /staff:
    post:
      summary: Create one or multiple staff members with skills and shifts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/StaffCreate'
                - type: array
                  items:
                    $ref: '#/components/schemas/StaffCreate'
            examples:
              SingleStaff:
                summary: Single staff object
                value:
                  name: "John Doe"
                  contractId: 1
                  skills: [1, 2]
                  shifts: ["D", "L"]
              MultipleStaff:
                summary: Multiple staff objects
                value:
                  - name: "Jane Doe"
                    contractId: 2
                    skills: [1, 3]
                    shifts: ["N", "DH"]
                  - name: "Alice"
                    contractId: 1
                    skills: [2]
                    shifts: ["L"]
      responses:
        '201':
          description: Staff created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 201
                  success_message:
                    type: string
                    example: Staff created successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      staffIds:
                        type: array
                        items:
                          type: integer
                        example: [1, 2]
        '400':
          description: Bad request due to missing or invalid fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'

    put:
      summary: Update a staff member by ID (name, contract, skills, shifts)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffUpdate'
            examples:
              UpdateStaff:
                value:
                  name: "Jane Doe"
                  contractId: 2
                  skills: [1, 3]
                  shifts: ["N", "DH"]
      responses:
        '200':
          description: Staff updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardSuccessResponse'
        '400':
          description: Bad request due to invalid contract, skill, or shift
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '404':
          description: Staff not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'

    delete:
      summary: Delete staff members by list of IDs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                staffIds:
                  type: array
                  items:
                    type: integer
                  example: [1, 2, 3]
      responses:
        '200':
          description: Staff deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: Staff deleted successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      deletedCount:
                        type: integer
                        example: 2
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'

    get:
      summary: Get all staff members with skills and shifts
      responses:
        '200':
          description: List of all staff
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: Staff fetched successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      staff:
                        type: array
                        items:
                          $ref: '#/components/schemas/StaffResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'

    /staff/{id}:
      get:
        summary: Get a staff member by ID with skills and shifts
        parameters:
          - in: path
            name: id
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Staff member details
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      example: success
                    statusCode:
                      type: integer
                      example: 200
                    success_message:
                      type: string
                      example: Staff fetched successfully
                    error_message:
                      type: string
                      example: ""
                    payload:
                      type: object
                      properties:
                        staff:
                          $ref: '#/components/schemas/StaffResponse'
          '404':
            description: Staff not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/StandardErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/StandardErrorResponse'

  /licenses:
    post:
      summary: Verify license and extract details from uploaded files
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                pemFile:
                  type: string
                  format: binary
                  description: PEM public key file
                licFile:
                  type: string
                  format: binary
                  description: License file (.lic)
            encoding:
              pemFile:
                contentType: application/octet-stream
              licFile:
                contentType: application/octet-stream
      responses:
        '201':
          description: License verification result and extracted details
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 201
                  success_message:
                    type: string
                    example: License verified
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      start_date:
                        type: string
                        example: "01-01-2024"
                      end_date:
                        type: string
                        example: "01-01-2025"
                      timezone:
                        type: string
                        example: "Asia/Kolkata"
                      status:
                        type: string
                        example: "active"
                      python_output:
                        type: string
                        example: "✅ License valid from 01-01-2024 to 01-01-2025 (Asia/Kolkata)"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
    get:
      summary: Get all licenses
      responses:
        '200':
          description: List of licenses
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: Licenses fetched successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      licenses:
                        type: array
                        items:
                          $ref: '#/components/schemas/License'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
  
  /licenses/{id}:
    delete:
      summary: Delete a license by ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the license to delete
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: License deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: License deleted successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    example:
                      deleted: 1
        '404':
          description: License not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'

  /machine-id:
    get:
      summary: Get unique machine identifier
      responses:
        '200':
          description: Machine identifier fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: Machine identifier fetched successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      machineId:
                        type: string
                        example: "hashedid-00:11:22:33:44:55-Intel(R) CPU"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'

components:
  schemas:
    EmployeeScheduleCreate:
      type: object
      properties:
        date:
          type: string
          format: date
        employee_id:
          type: integer
        shift:
          type: string
        working:
          type: boolean
      required:
        - date
        - employee_id

    EmployeeScheduleResponse:
      type: object
      properties:
        scheduleId:
          type: string
        date:
          type: string
          format: date
        employeeId:
          type: integer
        shift:
          type: string
        working:
          type: boolean

    EmployeeScheduleCreateResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        statusCode:
          type: integer
          example: 201
        success_message:
          type: string
          example: Employee schedules created successfully
        error_message:
          type: string
          example: ""
        payload:
          type: object
          properties:
            batchId:
              type: string
              format: uuid
            employeeIds:
              type: array
              items:
                type: integer
              example: [1, 2]

    EmployeeScheduleListResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        statusCode:
          type: integer
          example: 200
        success_message:
          type: string
          example: Employee schedules fetched successfully
        error_message:
          type: string
          example: ""
        payload:
          type: object
          properties:
            schedules:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeScheduleResponse'

    StandardErrorResponse:
      type: object
      properties:
        status:
          type: string
          example: error
        statusCode:
          type: integer
          example: 400
        success_message:
          type: string
          example: ""
        error_message:
          type: string
          example: "Invalid input"
        payload:
          type: object
          example: {}

components:
    schemas:
      StaffCreate:
        type: object
        properties:
          name:
            type: string
          contractId:
            type: integer
          skills:
            type: array
            items:
              type: integer
          shifts:
            type: array
            items:
              type: string
        required:
          - name
          - contractId

      StaffUpdate:
        type: object
        properties:
          name:
            type: string
          contractId:
            type: integer
          skills:
            type: array
            items:
              type: integer
          shifts:
            type: array
            items:
              type: string

      StaffResponse:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          contractId:
            type: integer
          skills:
            type: array
            items:
              type: integer
          shifts:
            type: array
            items:
              type: string

      StandardErrorResponse:
        type: object
        properties:
          status:
            type: string
            example: error
          statusCode:
            type: integer
            example: 400
          success_message:
            type: string
            example: ""
          error_message:
            type: string
            example: "Invalid input"
          payload:
            type: object
            example: {}

      StandardSuccessResponse:
        type: object
        properties:
          status:
            type: string
            example: success
          statusCode:
            type: integer
            example: 200
          success_message:
            type: string
            example: Staff updated successfully
          error_message:
            type: string
            example: ""
          payload:
            type: object

components:
  schemas:
    Contract:
      type: object
      properties:
        ContractID:
          type: integer
        Description:
          type: string
        SingleAssignmentPerDay:
          type: boolean
        MaxNumAssignments:
          type: integer
        MinNumAssignments:
          type: integer
        MaxConsecutiveWorkingDays:
          type: integer
        MinConsecutiveWorkingDays:
          type: integer
        MaxConsecutiveFreeDays:
          type: integer
        MinConsecutiveFreeDays:
          type: integer
        MaxConsecutiveWorkingWeekends:
          type: integer
        MinConsecutiveWorkingWeekends:
          type: integer
        MaxWorkingWeekendsInFourWeeks:
          type: integer
        WeekendDefinition:
          type: string
        CompleteWeekends:
          type: boolean
        IdenticalShiftTypesDuringWeekend:
          type: boolean
        NoNightShiftBeforeFreeWeekend:
          type: boolean
        AlternativeSkillCategory:
          type: boolean
        UnwantedPatterns:
          type: string

    Staff:
      type: object
      properties:
        StaffID:
          type: integer
        Name:
          type: string
        ContractID:
          type: integer
        SkillID:
          type: integer

    Skill:
      type: object
      properties:
        SkillID:
          type: integer
        SkillName:
          type: string

    DayOffRequest:
      type: object
      properties:
        employeeId:
          type: integer
        requestDate:
          type: string
          format: date
        requestTypeId:
          type: integer

    ShiftOffRequest:
      type: object
      properties:
        employeeId:
          type: integer
        requestDate:
          type: string
          format: date
        requestTypeId:
          type: integer
        shift:
          type: string

    RequestType:
      type: object
      properties:
        RequestTypeID:
          type: integer
        RequestTypeName:
          type: string
        RequestTypeDesc:
          type: string

    License:
      type: object
      properties:
        license_id:
          type: integer
        license_key:
          type: string
        issued_at:
          type: string
          format: date
        expires_at:
          type: string
          format: date
        status:
          type: string
        created_at:
          type: string
        updated_at:
          type: string

    # Add standard response schemas
    StandardSuccessResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        statusCode:
          type: integer
          example: 201
        success_message:
          type: string
          example: Resource created successfully
        error_message:
          type: string
          example: ""
        payload:
          type: object
          example: { "contractId": 101 }

    StandardErrorResponse:
      type: object
      properties:
        status:
          type: string
          example: error
        statusCode:
          type: integer
          example: 400
        success_message:
          type: string
          example: ""
        error_message:
          type: string
          example: "Invalid data"
        payload:
          type: object
          example: {}

    StandardContractsListResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        statusCode:
          type: integer
          example: 200
        success_message:
          type: string
          example: Contracts fetched successfully
        error_message:
          type: string
          example: ""
        payload:
          type: object
          properties:
            contracts:
              type: array
              items:
                $ref: '#/components/schemas/Contract'

    StandardStaffListResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        statusCode:
          type: integer
          example: 200
        success_message:
          type: string
          example: Staff fetched successfully
        error_message:
          type: string
          example: ""
        payload:
          type: object
          properties:
            staff:
              type: array
              items:
                $ref: '#/components/schemas/Staff'

    StandardStaffResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        statusCode:
          type: integer
          example: 200
        success_message:
          type: string
          example: Staff fetched successfully
        error_message:
          type: string
          example: ""
        payload:
          type: object
          properties:
            staff:
              $ref: '#/components/schemas/Staff'

    StandardSkillsListResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        statusCode:
          type: integer
          example: 200
        success_message:
          type: string
          example: Skills fetched successfully
        error_message:
          type: string
          example: ""
        payload:
          type: object
          properties:
            skills:
              type: array
              items:
                $ref: '#/components/schemas/Skill'

    StandardRequestTypesListResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        statusCode:
          type: integer
          example: 200
        success_message:
          type: string
          example: Request types fetched successfully
        error_message:
          type: string
          example: ""
        payload:
          type: object
          properties:
            requestTypes:
              type: array
              items:
                $ref: '#/components/schemas/RequestType'
          type: string
          example: Request types fetched successfully
        error_message:
          type: string
          example: ""
        payload:
          type: object
          properties:
            requestTypes:
              type: array
              items:
                $ref: '#/components/schemas/RequestType'
