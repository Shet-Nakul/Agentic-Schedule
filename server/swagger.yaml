openapi: 3.0.0
info:
  title: Agentic Schedule API
  version: 1.0.0
  description: API documentation for Contracts, Staff, Skills, DayOffRequests, and ShiftOffRequests

paths:
  /contracts:
    post:
      summary: Create one or multiple contracts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Contract'
                - type: array
                  items:
                    $ref: '#/components/schemas/Contract'
            examples:
              SingleContract:
                summary: Single contract object
                value:
                  ContractID: 1
                  Description: "Sample contract"
                  SingleAssignmentPerDay: true
                  MaxNumAssignments: 5
                  MinNumAssignments: 1
                  MaxConsecutiveWorkingDays: 6
                  MinConsecutiveWorkingDays: 2
                  MaxConsecutiveFreeDays: 3
                  MinConsecutiveFreeDays: 1
                  MaxConsecutiveWorkingWeekends: 2
                  MinConsecutiveWorkingWeekends: 1
                  MaxWorkingWeekendsInFourWeeks: 3
                  WeekendDefinition: "Sat-Sun"
                  CompleteWeekends: true
                  IdenticalShiftTypesDuringWeekend: false
                  NoNightShiftBeforeFreeWeekend: false
                  AlternativeSkillCategory: false
                  UnwantedPatterns: ""
              MultipleContracts:
                summary: List of contract objects
                value:
                  - ContractID: 2
                    Description: "Contract 2"
                    SingleAssignmentPerDay: false
                    MaxNumAssignments: 4
                    MinNumAssignments: 2
                    MaxConsecutiveWorkingDays: 5
                    MinConsecutiveWorkingDays: 2
                    MaxConsecutiveFreeDays: 2
                    MinConsecutiveFreeDays: 1
                    MaxConsecutiveWorkingWeekends: 1
                    MinConsecutiveWorkingWeekends: 1
                    MaxWorkingWeekendsInFourWeeks: 2
                    WeekendDefinition: "Sat-Sun"
                    CompleteWeekends: false
                    IdenticalShiftTypesDuringWeekend: false
                    NoNightShiftBeforeFreeWeekend: false
                    AlternativeSkillCategory: false
                    UnwantedPatterns: ""
                  - ContractID: 3
                    Description: "Contract 3"
                    SingleAssignmentPerDay: true
                    MaxNumAssignments: 6
                    MinNumAssignments: 3
                    MaxConsecutiveWorkingDays: 7
                    MinConsecutiveWorkingDays: 2
                    MaxConsecutiveFreeDays: 3
                    MinConsecutiveFreeDays: 1
                    MaxConsecutiveWorkingWeekends: 2
                    MinConsecutiveWorkingWeekends: 1
                    MaxWorkingWeekendsInFourWeeks: 4
                    WeekendDefinition: "Fri-Sat"
                    CompleteWeekends: true
                    IdenticalShiftTypesDuringWeekend: true
                    NoNightShiftBeforeFreeWeekend: true
                    AlternativeSkillCategory: true
                    UnwantedPatterns: ""
      responses:
        '201':
          description: Contracts created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 201
                  success_message:
                    type: string
                    example: Contracts created successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      contractIds:
                        type: array
                        items:
                          type: integer
                        example: [1, 2, 3]
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
    get:
      summary: Get all contracts
      responses:
        '200':
          description: List of contracts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardContractsListResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
    delete:
      summary: Delete contracts by list of ContractID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contractIds:
                  type: array
                  items:
                    type: integer
                  example: [1, 2, 3]
      responses:
        '200':
          description: Contracts deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: Contracts deleted successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      deletedCount:
                        type: integer
                        example: 3
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'

  /staff:
    post:
      summary: Create one or multiple staff members
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Staff'
                - type: array
                  items:
                    $ref: '#/components/schemas/Staff'
            examples:
              SingleStaff:
                summary: Single staff object
                value:
                  name: "John Doe"
                  contractId: 1
                  skillId: 2
              MultipleStaff:
                summary: List of staff objects
                value:
                  - name: "Jane Doe"
                    contractId: 2
                    skillId: 3
                  - name: "Alice"
                    contractId: 1
                    skillId: 2
      responses:
        '201':
          description: Staff created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 201
                  success_message:
                    type: string
                    example: Staff created successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      staffIds:
                        type: array
                        items:
                          type: integer
                        example: [1, 2, 3]
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
    get:
      summary: Get all staff
      responses:
        '200':
          description: List of staff
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardStaffListResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
    delete:
      summary: Delete staff by list of StaffID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                staffIds:
                  type: array
                  items:
                    type: integer
                  example: [1, 2, 3]
      responses:
        '200':
          description: Staff deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: Staff deleted successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      deletedCount:
                        type: integer
                        example: 2
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'

  /staff/{id}:
    get:
      summary: Get staff by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Staff member
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardStaffResponse'
        '404':
          description: Staff not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'

  /skills:
    post:
      summary: Create one or multiple skills
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Skill'
                - type: array
                  items:
                    $ref: '#/components/schemas/Skill'
            examples:
              SingleSkill:
                summary: Single skill object
                value:
                  skillName: "Nurse"
              MultipleSkills:
                summary: List of skill objects
                value:
                  - skillName: "Doctor"
                  - skillName: "Technician"
      responses:
        '201':
          description: Skills created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 201
                  success_message:
                    type: string
                    example: Skills created successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      skillIds:
                        type: array
                        items:
                          type: integer
                        example: [1, 2, 3]
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '409':
          description: Skill already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
    get:
      summary: Get all skills
      responses:
        '200':
          description: List of skills
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardSkillsListResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
    delete:
      summary: Delete skills by list of SkillID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                skillIds:
                  type: array
                  items:
                    type: integer
                  example: [1, 2, 3]
      responses:
        '200':
          description: Skills deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: Skills deleted successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      deletedCount:
                        type: integer
                        example: 2
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'

  /dayoffrequests:
    post:
      summary: Create one or multiple day off requests
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/DayOffRequest'
                - type: array
                  items:
                    $ref: '#/components/schemas/DayOffRequest'
      responses:
        '201':
          description: Day off requests created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 201
                  success_message:
                    type: string
                    example: Day off requests created successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      requestIds:
                        type: array
                        items:
                          type: integer
                        example: [1, 2, 3]
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
    get:
      summary: Get all day off requests
      responses:
        '200':
          description: List of day off requests
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: Day off requests fetched successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      dayOffRequests:
                        type: array
                        items:
                          $ref: '#/components/schemas/DayOffRequest'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
    delete:
      summary: Delete day off requests by list of RequestID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                requestIds:
                  type: array
                  items:
                    type: integer
                  example: [1, 2, 3]
      responses:
        '200':
          description: Day off requests deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: Day off requests deleted successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      deletedCount:
                        type: integer
                        example: 2
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'

  /shiftoffrequests:
    post:
      summary: Create one or multiple shift off requests
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/ShiftOffRequest'
                - type: array
                  items:
                    $ref: '#/components/schemas/ShiftOffRequest'
      responses:
        '201':
          description: Shift off requests created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 201
                  success_message:
                    type: string
                    example: Shift off requests created successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      requestIds:
                        type: array
                        items:
                          type: integer
                        example: [1, 2, 3]
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
    get:
      summary: Get all shift off requests
      responses:
        '200':
          description: List of shift off requests
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: Shift off requests fetched successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      shiftOffRequests:
                        type: array
                        items:
                          $ref: '#/components/schemas/ShiftOffRequest'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
    delete:
      summary: Delete shift off requests by list of RequestID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                requestIds:
                  type: array
                  items:
                    type: integer
                  example: [1, 2, 3]
      responses:
        '200':
          description: Shift off requests deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: Shift off requests deleted successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      deletedCount:
                        type: integer
                        example: 2
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'

  /requesttype:
    post:
      summary: Create one or multiple request types
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/RequestType'
                - type: array
                  items:
                    $ref: '#/components/schemas/RequestType'
            examples:
              SingleRequestType:
                summary: Single request type object
                value:
                  RequestTypeName: "Vacation"
                  RequestTypeDesc: "Vacation leave"
              MultipleRequestTypes:
                summary: List of request type objects
                value:
                  - RequestTypeName: "Sick"
                    RequestTypeDesc: "Sick leave"
                  - RequestTypeName: "Personal"
                    RequestTypeDesc: "Personal leave"
      responses:
        '201':
          description: Request types created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 201
                  success_message:
                    type: string
                    example: Request types created successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      requestTypeIds:
                        type: array
                        items:
                          type: integer
                        example: [1, 2]
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
    get:
      summary: Get all request types
      responses:
        '200':
          description: List of request types
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: Request types fetched successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      requestTypes:
                        type: array
                        items:
                          $ref: '#/components/schemas/RequestType'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
    delete:
      summary: Delete request types by list of RequestTypeID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                requestTypeIds:
                  type: array
                  items:
                    type: integer
                  example: [1, 2]
      responses:
        '200':
          description: Request types deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: Request types deleted successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      deletedCount:
                        type: integer
                        example: 2
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'

  /requesttype/{id}:
    get:
      summary: Get request type by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Request type
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: RequestType fetched successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      requestType:
                        $ref: '#/components/schemas/RequestType'
        '404':
          description: Request type not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'

  /licenses:
    post:
      summary: Verify license and extract details from uploaded files
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                pemFile:
                  type: string
                  format: binary
                  description: PEM public key file
                licFile:
                  type: string
                  format: binary
                  description: License file (.lic)
            encoding:
              pemFile:
                contentType: application/octet-stream
              licFile:
                contentType: application/octet-stream
      responses:
        '201':
          description: License verification result and extracted details
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 201
                  success_message:
                    type: string
                    example: License verified
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      start_date:
                        type: string
                        example: "01-01-2024"
                      end_date:
                        type: string
                        example: "01-01-2025"
                      timezone:
                        type: string
                        example: "Asia/Kolkata"
                      status:
                        type: string
                        example: "active"
                      python_output:
                        type: string
                        example: "✅ License valid from 01-01-2024 to 01-01-2025 (Asia/Kolkata)"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
    get:
      summary: Get all licenses
      responses:
        '200':
          description: List of licenses
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: Licenses fetched successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      licenses:
                        type: array
                        items:
                          $ref: '#/components/schemas/License'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
  
  /licenses/{id}:
    delete:
      summary: Delete a license by ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the license to delete
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: License deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: License deleted successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    example:
                      deleted: 1
        '404':
          description: License not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'

  /machine-id:
    get:
      summary: Get unique machine identifier
      responses:
        '200':
          description: Machine identifier fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  success_message:
                    type: string
                    example: Machine identifier fetched successfully
                  error_message:
                    type: string
                    example: ""
                  payload:
                    type: object
                    properties:
                      machineId:
                        type: string
                        example: "hashedid-00:11:22:33:44:55-Intel(R) CPU"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'

components:
  schemas:
    Contract:
      type: object
      properties:
        ContractID:
          type: integer
        Description:
          type: string
        SingleAssignmentPerDay:
          type: boolean
        MaxNumAssignments:
          type: integer
        MinNumAssignments:
          type: integer
        MaxConsecutiveWorkingDays:
          type: integer
        MinConsecutiveWorkingDays:
          type: integer
        MaxConsecutiveFreeDays:
          type: integer
        MinConsecutiveFreeDays:
          type: integer
        MaxConsecutiveWorkingWeekends:
          type: integer
        MinConsecutiveWorkingWeekends:
          type: integer
        MaxWorkingWeekendsInFourWeeks:
          type: integer
        WeekendDefinition:
          type: string
        CompleteWeekends:
          type: boolean
        IdenticalShiftTypesDuringWeekend:
          type: boolean
        NoNightShiftBeforeFreeWeekend:
          type: boolean
        AlternativeSkillCategory:
          type: boolean
        UnwantedPatterns:
          type: string

    Staff:
      type: object
      properties:
        StaffID:
          type: integer
        Name:
          type: string
        ContractID:
          type: integer
        SkillID:
          type: integer

    Skill:
      type: object
      properties:
        SkillID:
          type: integer
        SkillName:
          type: string

    DayOffRequest:
      type: object
      properties:
        employeeId:
          type: integer
        requestDate:
          type: string
          format: date
        requestTypeId:
          type: integer

    ShiftOffRequest:
      type: object
      properties:
        employeeId:
          type: integer
        requestDate:
          type: string
          format: date
        requestTypeId:
          type: integer
        shift:
          type: string

    RequestType:
      type: object
      properties:
        RequestTypeID:
          type: integer
        RequestTypeName:
          type: string
        RequestTypeDesc:
          type: string

    License:
      type: object
      properties:
        license_id:
          type: integer
        license_key:
          type: string
        issued_at:
          type: string
          format: date
        expires_at:
          type: string
          format: date
        status:
          type: string
        created_at:
          type: string
        updated_at:
          type: string

    # Add standard response schemas
    StandardSuccessResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        statusCode:
          type: integer
          example: 201
        success_message:
          type: string
          example: Resource created successfully
        error_message:
          type: string
          example: ""
        payload:
          type: object
          example: { "contractId": 101 }

    StandardErrorResponse:
      type: object
      properties:
        status:
          type: string
          example: error
        statusCode:
          type: integer
          example: 400
        success_message:
          type: string
          example: ""
        error_message:
          type: string
          example: "Invalid data"
        payload:
          type: object
          example: {}

    StandardContractsListResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        statusCode:
          type: integer
          example: 200
        success_message:
          type: string
          example: Contracts fetched successfully
        error_message:
          type: string
          example: ""
        payload:
          type: object
          properties:
            contracts:
              type: array
              items:
                $ref: '#/components/schemas/Contract'

    StandardStaffListResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        statusCode:
          type: integer
          example: 200
        success_message:
          type: string
          example: Staff fetched successfully
        error_message:
          type: string
          example: ""
        payload:
          type: object
          properties:
            staff:
              type: array
              items:
                $ref: '#/components/schemas/Staff'

    StandardStaffResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        statusCode:
          type: integer
          example: 200
        success_message:
          type: string
          example: Staff fetched successfully
        error_message:
          type: string
          example: ""
        payload:
          type: object
          properties:
            staff:
              $ref: '#/components/schemas/Staff'

    StandardSkillsListResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        statusCode:
          type: integer
          example: 200
        success_message:
          type: string
          example: Skills fetched successfully
        error_message:
          type: string
          example: ""
        payload:
          type: object
          properties:
            skills:
              type: array
              items:
                $ref: '#/components/schemas/Skill'

    StandardRequestTypesListResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        statusCode:
          type: integer
          example: 200
        success_message:
          type: string
          example: Request types fetched successfully
        error_message:
          type: string
          example: ""
        payload:
          type: object
          properties:
            requestTypes:
              type: array
              items:
                $ref: '#/components/schemas/RequestType'
          type: string
          example: Request types fetched successfully
        error_message:
          type: string
          example: ""
        payload:
          type: object
          properties:
            requestTypes:
              type: array
              items:
                $ref: '#/components/schemas/RequestType'
